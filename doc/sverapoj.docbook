<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
 "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article lang="sr">

<articleinfo>

    <title>Израда Сверачунарског појмовника</title>

    <!--
    <authorgroup>
        <author>
            <firstname></firstname>
            <email></email>
        </author>
    </authorgroup>
    -->

    <copyright>
        <year>2008</year>
        <holder>Часлав Илић</holder>
        <!--<holder></holder>-->
    </copyright>

    <legalnotice>
        <para>Копирање, дељење и/или мењање овог документа дозвољено је под условима Гнуове Лиценце слободне документације, верзија 1.2.</para>
    </legalnotice>

    <revhistory>
        <revision>
            <date>@date@</date>
            <revremark>Последња измена (ризничка рев. @vcsrev@).</revremark>
        </revision>
        <revision>
            <date>5. јул 2008.</date>
            <revremark>Прва бразда.</revremark>
        </revision>
    </revhistory>

    <abstract>
        <para>Чланак је намењен садашњим и будућим учесницима у изради Појмовника. Говори о могућим начинима учествовања, даје преглед техничких решења и основе њихове употребе, дефинише конвенције при састављању садржаја и упућује на међузависности које треба имати у виду. Изнесени материјал представља тренутне водиље усаглашене међу уредницима, и подложан је променама како околности буду налагале и пристизале свеже идеје.</para>
    </abstract>

</articleinfo>

<sect1 id="s-about">
    <title>Видови учествовања</title>

    <para>Рад на „Сверачунарском појмовнику“ започет је да би се задовољило неколико потреба у вези са локализацијом слободног софтвера на српски језик. Прво, различитим преводилачким пројектима требало је како темељито праћење терминологије коју сами користе, тако и преглед терминологије по другим пројектима, од користи када треба одлучити како назвати неки том пројекту нови појам. Друго, овакав преглед терминологије кроз различите пројекте допринео би њеном усаглашавању између пројеката, пружајући полазну тачку у разговорима којима се до такве сагласности долази. Треће, са становишта корисника̂ локализованих окружења, Појмовник би представљао заокружени извор основних објашњења о ономе што се крије иза израза на које могу наићи у свакодневном раду, речник који их повезује са свеприсутним енглеским парњацима, као и упућивач ка спољашњим, детаљнијим информацијама о појмовима.</para>

    <para>Када се сврха Појмовника овако постави, очигледно је да његово успешно остварење захтева широку сарадњу активних преводилаца слободног софтвера, као и да доприношење мора бити отворено за свакога ко Појмовник види као користан степеник ка одређеном циљу. Као и код већине отворених пројеката, постоји више начина да се, непосредно или посредно, учествује у изради Појмовника:
    <itemizedlist>
    <listitem>
        <para>Као и код избора израза при превођењу софтвера, уредницима Појмовника од користи је свако објективно и аргументовано мишљење, посебно када представља терминолошка решења из постојећих извора. То значи да само учествовање у разговорима уредника̂ о терминологији — такође јавних — већ представља посредно учествовање у изради Појмовника.</para>
    </listitem>
    <listitem>
        <para>Нови појам који ваљда додати Појмовнику није сасвим тривијално описати: треба повести рачуна на које је друге појмове згодно наслонити објашњење, могу ли се дати какви примери, који су спољни извори информација, и то укратко спаковати у неколико реченица. Састављење таквих описа и прослеђивање уредницима већ се може сматрати директним учешћем у раду на Појмовнику.</para>
    </listitem>
    <listitem>
        <para>Најнепосредније учествовање чини прихватање уредничких задатака; ако овако срочен звучи исувише званичан и обавезујућ, овај вид учествовања то заиста није. Појмовник технички почива на модерним решењима дистрибуираног развоја и по мери скројеним програмским помагалима, која омогућавају свакоме ко их савлада (боље рећи — не поплаши се) да се прихвати уређивања. Дистрибуираност омогућава рад сопственим темпом, лако укључивање, искључивање или паузирање учествовања, а свакако без негативних последица по Појмовник.</para>
    </listitem>
    <listitem>
        <para>Поменута техничка решења у вези са Појмовником увек се могу побољшати. Могу се извести нове аутоматске обраде, бољи начини представљања садржаја преводиоцима и корисницима, или прилагођавања за употребу у специјализованим преводилачким програмима. Ово је, дакле, такође отворено игралиште за могуће сараднике.</para>
    </listitem>
    </itemizedlist></para>

    <para>Главни комуникациони канал за рад на Појмовнику чини поштанска листа „Сорта“ (<emphasis>Српска отворена рачунарска терминологија</emphasis>), на коју се може слободно пријавити и прегледати архива досадашњих разговора на адреси <ulink url="http://groups.google.com/group/sorta?hl=sr">groups.google.com/group/sorta</ulink>. Пријављивање на њу први је корак ка потпомагању израде Појмовника.</para>

    <para><remark>Кад му се одреди добро место, убацити везу ка тренутном пресеку Појмовника; општем, можда и по окружењима?</remark></para>

</sect1>

<sect1 id="s-techne">
    <title>Техничка подлога</title>

    <para>Појмовник изворно чини скуп текстуалних датотека у формату <ulink url="http://nedohodnik.dyndns.org/divergloss-doc/divergloss.html">диверглос</ulink>, специјализацији ИксМЛ-а састављеној баш за потребе Појмовника. Овај скуп датотека даље је подвргнут <ulink url="http://en.wikipedia.org/wiki/Revision_control">систему управљања верзијама</ulink> (скр. СУВ), посебице <ulink url="http://git.or.cz/">Гиту</ulink>, модерном СУВ-у са тежиштем на дистрибуираној сарадњи. Коначно, помоћу програмског алата који одржавају уредници Појмовника, од извора се граде излазни облици („погледи“) за различите намене — на пример, општи <ulink url="http://nedohodnik.dyndns.org/sverapoj/">ХТМЛ поглед</ulink>.</para>

    <para>Три су, дакле, техничка елемента којима уредник мора да се служи при изради садржаја за Појмовник. Први је пристојан уређивач текста за рад на изворним датотекама; послужиће сваки који уме да истиче синтаксу ИксМЛ-а. Друго је познавање концепта управљања верзијама, што је довољно да би се уз минимално почетно спријатељивање с Гитом почело радити на Појмовнику. Трећи елемент је, наравно, незазирање од командне линије, из које се управља и Гитом и скриптама за обраду Појмовника.</para>

<sect2 id="s-techne-repo">
    <title>Ризница</title>

    <para>Главна гитовска ризница Појмовника налази се на <ulink url="http://gitorious.org/projects/sverapoj">Гиторијусу</ulink>, и може се <emphasis>клонирати</emphasis> овако:
    <programlisting><![CDATA[
$ git clone git://gitorious.org/sverapoj/mainline.git sverapoj
]]></programlisting>
    Ова наредба ће саградити локалну ризницу у директоријуму <filename>sverapoj/</filename>, са целокупним садржајем и историјатом измена, после чега се може приступити уређивању Појмовника.</para>

    <para>Гит омогућава разноврсне начине рада са ризницом и објављивања учињених измена, о којима се детаљно прича у његовом упутству. На пример, може се једна од наведених ризница пратити као удаљена грана, а измене у локалној грани слати као закрпе одржаваоцу те ризнице. Или, може се омогућити јавни приступ локалној ризници (ако рачунар има статичку ИП, а може и динамички ДНС), тако да се одржавалац праћене удаљене ризнице повремено обавештава да повуче допуне из локалне. Допуна претходног је да се локално има приватна и јавна ризница... <remark>Шта описати овде, и колико детаљно? Ништа, оставити сваком да се сам сабере на основу Гитовог упутства?</remark></para>

    <para id="p-repo-diff">Уобичајени приказ разлика при управљању верзијама је онај са +/- прегледом измењених, додатих или уклоњених редова. Ово је сасвим довољно за рад на програмском коду, али није прегледно за дуже <link linkend="p-cstyle-wrap">непреломљене текстове</link> какви постоје у Појмовнику — за њих је погоднији преглед разлика на нивоу речи. У том циљу, сама наредба <command>git-diff</command> даје опцију којом се истичу измене у речима уместо целих редова:
    <programlisting><![CDATA[
$ git diff --color-words <остале-опције> | less -r
]]></programlisting>
    <remark>Ово треба добро утврдити: како најбоље прегледати разлике у тексту? Нпр. у горњој наредби <command>less</command> прелама ред усред речи. Можда приправити и скриптицу ил' две у <filename>util/</filename></remark>.</para>

</sect2>

<sect2 id="s-techne-proc">
    <title>Обрада</title>

    <para>Посебно скројене скрипте за обраду диверглоса, ИксМЛ-а којим је писан Појмовник, такође се држе у гитовској ризници, али засебној од Појмовникове:
    <itemizedlist>
    <listitem>
        <para><literal>git://nedohodnik.dyndns.org/divergloss.git</literal> (Часлава Илића)</para>
    </listitem>
    <listitem>
        <para><literal>git://cowfarm.no-ip.org:9003/divergloss.git</literal> (Филипа Милетића)</para>
    </listitem>
    </itemizedlist>
    Пошто се клонира, потребно је изградити српски превод и поставити путању до извршних датотека:
    <programlisting><![CDATA[
$ git clone <адреса>
$ cd divergloss
$ dgproc/po/update-po.sh compile # градња превода
[...нешто исписа...]
$ export PATH=$PWD/dgproc:$PATH
]]></programlisting>
    после чега су скрипте спремне за извршавање. Како се неретко допуњује новим могућностима и исправкама, повремено ову ризницу треба освежити (<literal>git pull</literal>), уз понављање корака градње превода.</para>

    <para>Главна скрипта за обраду појмовника позива се наредбом <command>dgproc.py</command>. У најосновнијем облику, ова се наредба над појмовником извршава овако:
    <programlisting><![CDATA[
$ cd <ризница-Појмовника>
$ dgproc.py top.xml
]]></programlisting>
    (датотека <filename>top.xml</filename> прикупља све остале у Појмовнику; о структури ризнице Појмовника у <link linkend="s-struct-tree">посебном одељку</link>). Ова наредба ће учини само једно: проверити ваљаност Појмовника, пријављујући све пронађене грешке. Уредници је извршавају када су нешто мењали, како би оверили техничку исправност измена.</para>

    <para>У проширеном облику, наредба <command>dgproc.py</command> провлачи појмовник кроз <emphasis>сита</emphasis> разноразних намена, од којих свако прима одређене параметре. На пример, провлачењем кроз сито <literal>html</literal> гради се општи ХТМЛ поглед који стоји у поддиректоријуму <filename>html/</filename> ризнице:
    <programlisting><![CDATA[
$ dgproc.py html top.xml -sbase:html/
]]></programlisting>
    Први параметар је назив сита, други збирна датотека појмовника, а параметри ситу шаљу се опцијом <literal>-s&lt;парам&gt;:&lt;вредност&gt;</literal>; овде <literal>base:html/</literal> каже у ком директоријуму треба саградити ХТМЛ поглед. Да би се начинио ХТМЛ поглед специјализован нпр. за окружење КДЕ, требало би издати:
    <programlisting><![CDATA[
$ dgproc.py html top.xml -senv:kde -sbase:html-kde/
]]></programlisting>
    где је <literal>kde</literal> један од кључева окружења̂ дефинисаних у Појмовнику. А сасвим другачији поглед, на пример ПО датотека за одређено окружење, добија се овако:
    <programlisting><![CDATA[
$ dgproc.py po top.xml -senv:kde -solang:en -stlang:sr -sfile:kde.po
]]></programlisting>
    </para>

    <para>Детаљна документација за <command>dgproc.py</command> и расположива сита може се наћи у њеној ризници — како корисничка, тако и развојна за писање нових сита.</para>

</sect2>

</sect1>

<sect1 id="s-struct">
    <title>Распоред и структура</title>

    <para>Како од Појмовника, с техничке стране, не би настала популарна „купусара“ која би отежавала његово уређивање и одржавање, утврђена су нека правила којих се треба придржавати при раду на њему. Она дефинишу распоред датотека у оквиру ризнице, и структуру садржаја унутар датотека.</para>

<sect2 id="s-struct-script">
    <title>Радно писмо</title>

    <para>Сав текстуални садржај Појмовника на српском језику пише се искључиво ћирилицом. Ово укључује како садржај у ужем смислу (ИксМЛ датотеке: описи појмова, изрази, итд.), тако и текст у свим помоћним датотекама, па и <emphasis>поруке уз предаје у ризницу</emphasis>. Више је разлога овоме.</para>

    <para>Записан ћирилицом, текст на српском прецизно је издвојен од осталог текстуалног садржаја, што погодује разним аутоматским обрадама. Провера правописа може слободно узети у обзир само речи написане ћирилицом, избегавши да захвати стране или симболичке речи (енглеске изразе, форматске директиве...) Затим, као што ће се видети у даљем тексту, кључеви појмова састављају се од подскупа енглеске абецеде, па како их уредници често морају тражити при додавању и измени уноса, врло погодује што су јасно издвојени од окружујућег српског текста.</para>

    <para>Поред техничке стране, ту је и употребна. С обзиром на свеприсутност разних видова латиничког алфабета, догађа се да у тексту ћирилицом неке посебне стране речи остају записане латиницом (обрнуто је практично нечувено), што се писањем појмовника ћирилицом непосредно и бележи. Затим, транскрибована лична именица, у рачунарским водама данас готово без изузетка изворно латинична или пристигла преко латиничног посредника, некада има исту графију слово-за-слово у српском или је облика који тешко одаје порекло (нпр. измишљена реч), у ком случају ћирилица јасно указује да је у питању транскрипција. Ове нијансе не би могле бити тако језгровито истакнуте ако би се Појмовник састављао латиницом, већ би било потребно дефинисати помоћне одреднице, које би увек требало имати у виду при уређивању садржаја.</para>

    <para>Можда се треба посебно осврнути на предајне поруке, тј. текстове које уредници морају уносити при предаји садржаја, наредбом <command>git-commit</command>. Једно сасвим лоше решење је да их свако пише како се накани у тренутку предаје (ћирилицом, латиницом, ошишаном латиницом...) јер се тиме отежава претрага ризничког дневника. Како ћирилици и латиници свакако треба дати предност над ошишаном латиницом где год је то технички могуће, а Гит се сасвим добро сналази са кодирањем УТФ-8 (чак је оно подразумевано), онда је складно да се и за предајне поруке користи ћирилица, кад већ за сав остали садржај.</para>

    <para>Радно писмо, међутим, не утиче на писмо садржаја за крајњу употребу, каквим га представљају појмовнички погледи — <emphasis>сваки</emphasis> поглед може се изградити како у ћириличном, тако и у латиничном запису. Ово је такође последица ћирилице као радног писма, обрнуто не би било практично изводљиво.</para>
</sect2>

<sect2 id="s-struct-tree">
    <title>Ризничко стабло</title>

    <para>Стабло директоријума и датотека у ризници изгледа овако:
    <programlisting><![CDATA[
top.xml
...
about/
    editors.xml
    environments.xml
    ...
concepts/
    0.xml
    a.xml
    b.xml
    ...
doc/
    ...
html/
    ...
util/
    ...
]]></programlisting>
    Датотека <filename>top.xml</filename> сабира све остале ИксМЛ датотеке, које чине садржај Појмовника; од ње увек почињу аутоматске обраде, нпр. изградња погледа̂. Директоријуми највишег нивоа, редом, имају следеће намене:
    <variablelist>

    <varlistentry><term><filename>about/</filename></term>
    <listitem>
        <para>Глобални појмовнички подаци, сваки са јединственим кључем на које се позива при писању појмова. Овамо спадају информације о окружењима, уредницима, областима појмова, граматичким категоријама израза, и др. Поред тога што ће дописати себе међу уреднике, нови уредник треба да се упозна са садржајем сваке од ових датотека, како би могао темељито да опрема појмове и изразе које ће касније додавати.</para>
    </listitem>
    </varlistentry>

    <varlistentry><term><filename>concepts/</filename></term>
    <listitem>
        <para>Главна грађа Појмовника: описи појмова, изрази који их именују, везе ка детаљнијим подацима, итд. Уредници највише времена проводе радећи на овим датотекама. Свака је именована једним словом енглеске абецеде, тако да се у једној налазе сви појмови чији кључеви почињу тим словом (<filename>0.xml</filename> резервисана је за посебне, тзв. метапојмове).</para>
    </listitem>
    </varlistentry>

    <varlistentry><term><filename>doc/</filename></term>
    <listitem>
        <para>Сва документација за рад на Појмовнику. Нпр. овде се налази ХТМЛ документ који управо читате, и његова изворна докбук датотека.</para>
    </listitem>
    </varlistentry>

    <varlistentry><term><filename>html/</filename></term>
    <listitem>
        <para>Основни ХТМЛ поглед на Појмовник, независан од окружења, који се периодично гради на основу ИксМЛ извора. Садржи индекс свих израза дефинисаних Појмовником, што може бити корисно уредницима док раде на њему.</para>
    </listitem>
    </varlistentry>

    <varlistentry><term><filename>util/</filename></term>
    <listitem>
        <para>Сви помоћни програми за израду Појмовника.</para>
    </listitem>
    </varlistentry>

    </variablelist>
    </para>

    <para>Имена директоријумима и датотекама увек се дају по квазиенглеском обрасцу, јер се сматрају техничком скелом Појмовника, нпр. као и ИксМЛ ознаке унутар датотека, или ко̑д помоћних програма.</para>

</sect2>

<sect2 id="s-struct-cstyle">
    <title>Кодирање појмова</title>

    <para>У програмерским круговима, вечиту тему размирица представља стил кодирања — како тачно раздвајати и распоређивати синтаксне елементе кода, тамо год је то могуће на више начина. Ова тема се заправо преноси на сваки синтаксички уређени текстуални садржај, какав је и ИксМЛ формат Појмовника. Једино у чему се већина учесника поменутих размирица наизглед слаже, то је да никако није добро мешати стилове кодирања тамо где више људи сарађује на истом садржају (одређеном скупу датотека). Како Појмовник не дели задужења уредника̂, већ сваки може уређивати сваку датотеку, то је потребно установити један стил кодирања ради избегавања стилског хаоса.</para>

    <para>Стил се пре свега успоставља за кодирање појмова, као главног садржаја, док се на друге делове Појмовника лако може пренети уз извесне последично-логичне измене.</para>

    <para>Датотека с појмовима (оне у директоријуму <filename>concepts/</filename>) уређена је на следећи начин:
    <programlisting><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<concepts>

<concept id="applet">
    ...тело појма 1...
</concept>

<concept id="application">
    ...тело појма 2...
</concept>

...

</concepts>
]]></programlisting>
    Општи начин увлачења јесу <emphasis>четири размака по нивоу</emphasis>; посебно се избегава употреба табулатора. Елемент појма, <literal>concept</literal>, не увлачи се према горњем елементу <literal>concepts</literal>, пошто би тада цела датотека имала један сувишан ниво увлачења, који не служи прегледности распореда. Поделементи појма увлаче се очекивано један ниво. Појмови се раздвајају једним празним редом, а ређају, односно умећу лексикографским редоследом по кључевима.</para>

    <para>Атрибути елемента <literal>concept</literal> наводе се редом: прво кључ (<literal>id</literal>), области (<literal>topic</literal>), па сродни појмови (<literal>related</literal>). Ако га има, атрибут <literal>related</literal> преноси се у наредни ред и равна са почетком атрибута̂, пошто може садржати произвољан број појмова и временом је непостојанији од претходних. На пример:
    <programlisting><![CDATA[
<concept id="gnu" topic="acrons">
    ...
</concept>

<concept id="konqueror" topic="apps"
         related="firefox epiphany opera safari">
    ...
</concept>
]]></programlisting>
    </para>

    <para>Поделементи појма ређају се редоследом: опис, изрази, остало, где је свака од ових група одвојена празним редом:
    <programlisting><![CDATA[
<concept id="syntaxhighlighting">
    <desc>Визуелно разликовање синтаксичких [...] посматра.</desc>
    <!-- @упути: ... -->

    <term lang="en" gr="is">syntax highlighting</term>
    <term gr="is">истицање синтаксе</term>
    <term env="moz" gr="is">бојење синтаксе</term>

    <details root="wpen" rel="Syntax_highlighting"/>
</concept>
]]></programlisting>
    (о @-коментарима, какав се види у примеру испод описа, у даљем тексту). Празни редови притом треба да буду потпуно празни, без размака до нивоа увлачења; и иначе не треба остављати пратеће размаке у редовима.</para>

    <para>Када се уместо простог елемента израза користи проширени, <literal>eterm</literal>, његови поделементи се очекивано увлаче, а он сам се не одваја празним редом од простих израза:
    <programlisting><![CDATA[
<concept id="ckey">
    ...
    <term env="kde" gr="i">аплет</term>
    <eterm env="gnm ooo" gr="i">
        <nom>програмче</nom>
        <decl gr="mn">програмчићи</decl>
    </eterm>
    ...
</concept>
]]></programlisting>
    </para>

    <para id="p-cstyle-wrap">Дужи текстови, какав је опис, не преламају се статички на одређеној колони, већ се пуштају да теку колико је потребно. Визуелно преламање ради прегледности очекује се од уређивача текста којим се ради на датотеци. Ово је неопходно зато што се могу очекивати честе измене описа, како се додају нови појмови и упућује на њих или мењају изрази, што би стално захтевало поновно преламање, потирући добре стране статичког прелома. Незгода непреломљених пасуса је у томе што су делте при предаји у неким случајевима веће него што би морале бити, али се то узима као мање зло. С позитивне стране, Гит при прегледању разлика омогућава да се уместо простог +/- прегледа измењених редова добија обојени преглед измењених речи, а постоје и друге сличне могућности (в. раније <link linkend="p-repo-diff">о томе</link>).</para>

    <para>У случају да опис (или неки коментар) тражи неколико пасуса, што би требало да је реткост, може се употребити елемент дугог описа <literal>ldesc</literal>, који садржи поделементе пасуса. Пасуси се тада увлаче један ниво, стоје један по реду, такође без статичког прелома у оквиру пасуса:
    <programlisting><![CDATA[
<concept id="ckey">
    <ldesc>
        <para>Први пасус [...] готов.</para>
        <para>Други пасус [...] готов.</para>
    </ldesc>
    ...
</concept>
]]></programlisting>
    Једнако за елементе дугог коментара и порекла, <literal>lcomment</literal> и <literal>lorigin</literal>.
    </para>

    <para>Вредност многих атрибута је списак кључева, раздвојен размаком. Није лоше такве спискове одржавати уређеним, али ако се пропусти, онда само када се укаже наредна прилика, тј. кључ се додаје или одузима; не треба нпр. предавати измене које једино премештају кључеве по списковима.</para>

</sect2>

</sect1>

<sect1 id="s-adding">
    <title>Додавање уноса</title>

    <para>Под новим уносом у Појмовнику подразумева се нови појам, нови израз у оквиру постојећег појма, или нови опис (или коментар, и сл.) у оквиру постојећег појма или израза. У зависности од тога који се тип уноса додаје, треба извршити одређене поступке који ће правилно искористити претходне и олакшати будуће уносе.</para>

    <para>Измена постојећег уноса, нпр. описа или израза, углавном тражи исте радње као и додавање новог, те је једнако покривена наредним редовима.</para>

<sect2 id="s-adding-concept">
    <title>Појам</title>

    <para>Када се жели додати нови појам, прво је неопходно одредити његов кључ (вредност атрибута <literal>id</literal>). Кључеви, наравно, морају бити јединствени, али поред ове техничке неопходности треба испунити још неке договорне захтеве. Кључ се гради овим редоследом:
    <itemizedlist>
    <listitem>
        <para>Установи се енглески израз који именује појам (ако их има више, изабере се произвољан), па се затим у њему сва велика слова претворе у мала, а сви размаци и остала интерпункција (нпр. цртице) поизбацују. Тако <foreignphrase>Emacs</foreignphrase> постаје <literal>emacs</literal>, а <foreignphrase>hard disk</foreignphrase> <literal>harddisk</literal>.</para>
    </listitem>
    <listitem>
        <para>Ако кључ има неких несловних знакова који му дају значење, они се морају претворити у слова по неком уобичајеном систему: <foreignphrase>C++</foreignphrase> у <literal>cpp</literal>, или <foreignphrase>C#</foreignphrase> у <literal>csharp</literal>.</para>
    </listitem>
    <listitem>
        <para>Ако се овако изабран кључ сукобљава са кључем неког већ постојећег појма, онда му се надовезује: број ако нови појам није непосредно повезан с претходним, или подвлака са кратким описним суфиксом када таква веза постоји. На пример, <literal>file</literal> за ‘датотеку’, а <literal>file2</literal> за касније додати ‘досије’; <literal>java</literal> за програмски језик, а <literal>java_p</literal> за ‘оно што је писано’ тим језиком.</para>
    </listitem>
    <listitem>
        <para>Кључ на крају мора бити састављен само од малих слова енглеске абецеде, бројева и подвлака, при чему први знак мора бити слово.</para>
    </listitem>
    </itemizedlist>
    Главна предност оваквог избора кључева је у томе што уредник може с великом извесношћу погодити који је кључ неког појма на који жели да се позове у одређеној прилици, а потом лако претрагом потврди своју претпоставку.</para>

    <para>Када се кључ одреди, скела појма (ИксМЛ елемент <literal>concept</literal>) упише се у датотеку у поддиректоријуму <filename>concepts/</filename> према почетном слову кључа; у оквиру датотеке, уметне се у лексикографском поретку по кључевима.</para>

    <para>Пре него што се пређе на писање главног садржаја појма, описа и израза, покуша се додати неколико споредних одредница:
    <itemizedlist>
    <listitem>
        <para>област, или више њих, у које се појам може сврстати; области се наводе својим кључевима, као вредност атрибута <literal>topic</literal> елемента <literal>concept</literal>;</para>
    </listitem>
    <listitem>
        <para>упути на сродне појмове („види...“), навођењем њихови кључева у атрибуту <literal>related</literal>;</para>
    </listitem>
    <listitem>
        <para>спољашњи извори са детаљним информацијам о појму, као поделементи <literal>details</literal> (видети у Појмовнику или приручнику за диверглос како се саставља овај елемент, као и који су познати спољашњи извори).</para>
    </listitem>
    </itemizedlist>
    </para>

    <para>Често ће се десити да уредник жели да упути на појам који Појмовник још увек не бележи. Тада, уредник саставља кључ тог појма како је раније описано, али га не може формално додати (атр. <literal>related</literal>), јер би то изазвало грешку упућивања на непостојећи појам. Уместо тога, кључ се ставља у посебан @-коментар, у ред испод отварајуће ознаке елемента појма. Нпр. при додавању појма <literal>addon</literal>, ако је <literal>extension2</literal> знани појам, а <literal>plugin</literal> још не постоји, тада:
    <programlisting><![CDATA[
<concept id="addon"
         related="extension2">
    <!-- @види: plugin -->
    ...
</concept>
]]></programlisting>
    Последично, како се појам дода, треба потражити његов кључ свуда кроз Појмовник, и где год се нађе у @-коментару, пребацити га у атрибут <literal>related</literal>, или у елемент <literal>ref</literal> ако се @-коментар односи на <link linkend="s-adding-desc">опис</link>. Ако притом неки @-коментар остане празан, без кључева, уклонити цео његов ред.</para>

</sect2>

<sect2 id="s-adding-term">
    <title>Израз</title>

    <para>Иако можда делује као изврнут редослед, новододатом појму лакше је прво записати израз (односно изразе), па тек потом опис — који се не може изоставити. Зато о додавању израза пре него о описима.</para>

    <para>Поред основе, саме речи или синтагме, изрази носе још неке податке, што непходне што опционе. То могу бити: језик, окружење, граматичка категорија, деклинације, коментари, итд. Који се од ових података задаје, зависи од врсте и службе израза.</para>

    <para>Прво се наводе енглески изрази. Ако се зна само за један, наводи се уз језик и граматичку категорију:
    <programlisting><![CDATA[
<term lang="en" gr="i">software</term>
]]></programlisting>
    а ако их је више, онда се додаје и кључ окружењу, <emphasis>осим</emphasis> за израз који је претежан преко окружења, ако таквог има:
    <programlisting><![CDATA[
<term lang="en" gr="i">folder</term>  <!-- у већини окружења -->
<term lang="en" env="unx" gr="i">directory</term>
]]></programlisting>
    </para>

    <para>Потом се наводе српски изрази. Граматичка категорија се наводи увек (осим за неке специјалне области), окружење за сваки израз који није претежан, а језик се не наводи:
    <programlisting id="pl-terms-file"><![CDATA[
<term gr="i">датотека</term>
<term env="kde" gr="i">фајл</term>
]]></programlisting>
    Ако су изрази довољно шаролики да се не може утврдити један претежан, онда уредници морају утврдити израз који је тзв. „уреднички компромис“, означен метаокружењем <literal>uk</literal>:
    <programlisting id="pl-terms-applet"><![CDATA[
<term env="fed" gr="i">програмчић</term>
<term env="gnm ooo" gr="i">програмче</term>
<term env="kde moz uk" gr="i">аплет</term>  <!-- компромисни -->
]]></programlisting>
    Зашто је битно имати уреднички компромис израза за сваки појам који нема претежни израз, видеће се при додавању описа.
    </para>

    <para>Уместо елемента <literal>term</literal>, може се користи и елемент <literal>eterm</literal>, тзв. проширени израз. Он се користи, рецимо, када треба назначити одређену деклинацију израза (често проблематичан генитив, избор једног од два облика множине, итд.), или када се израз жели прокоментарисати. Тада се основни израз додаје као поделемент <literal>nom</literal>:
    <programlisting><![CDATA[
<eterm gr="i">
    <nom>софтвер</nom>
    <comment>Градивна именица, у множини само за [...]</comment>
</eterm>
...
<eterm env="kde" gr="i">
    <nom>знак</nom>
    <decl gr="mn">знакови</decl>
</eterm>
]]></programlisting>
    </para>

    <para>При писању новог појма, уредник може различито поступити са изразима. Може, на пример, не додати нити један једини израз, ако је појам нешто ново и ретке појаве. Може додати само израз за окружење које му је најближе — тада му поред кључа тог окружења аутоматски додаје и уреднички компромис (кључ <literal>uk</literal>, в. горе), али га <emphasis>не</emphasis> проглашава за претежно (тако што му уопште не би навео окружење). Коначно, може бити вредан па пребрати по разним окружењима, додајући изразе за свако од њих; тада може, ако процени, један израз оставити без кључа окружења, тј. прогласити га претежним, а кључеве окружења додати само другим изразима. Уредник је такође слободан да наброји изразе који се не налазе у окружењима које Појмовник прати, заводећи их под „идејно“ метаокружење (кључ <literal>id</literal>); израз не може бити истовремено и под овим и под неким стварним окружењем.</para>

    <para>Како се израз дода или измени за неко окружење — при састављању појма или касније — треба кроз Појмовник потражити кључ појма њиме именованим, како би се прилагодили текстови погођени изменом. Обично су то описи других појмова, где се израз помиње при упућивању на именовани појам (елемент <literal>ref</literal> у тексту описа).</para>

    <para>Каде се додаје израз који је придев, треба га увек давати у мушком роду, и то неодређеном виду ако постоји. На пример: „овај штампач је подразумев<emphasis>ан</emphasis>“ — „подразумева<emphasis>ни</emphasis> штампач“, значи да се придев наводи као „подразумеван“, док „овај штампач је мреж<emphasis>ни</emphasis>“ — „мреж<emphasis>ни</emphasis> штампач“, даје само придев „мрежни“.</para>

</sect2>

<sect2 id="s-adding-desc">
    <title>Опис</title>

    <para>Писање описа свакако је најзамашнији део додавања новог појма. Поред основне потребе сажетог и прецизног објашњења појма, уредник треба да мисли и о упућивању на друге појмове, оне забележене, али и тренутно незабележене у Појмовнику, па и о изразима који их именују по различитим окружењима.</para>

    <para>Прво, дакле, треба осмислити сирови текст описа. Ту се нема шта много рећи, сваки уредник личном проценом одређује шта је најпрече изнети о појму. Што се обима тиче, опис треба природно да буде један пасус, односно једна или више реченица; уколико уредник ухвати себе како често користи „или“, алтернативе у заградама, или да би радо поделио опис у два пасуса, то је готов знак да су у ствари у питању два раздвојена појма (без обзира на то што их именује исти израз), те их као различите треба и додати у Појмовник (за пример в. <literal>online</literal>, <literal>online2</literal>, <literal>online3</literal>).</para>

    <para>Потом, уредник треба да размисли који делови текста помињу друге појмове које би Појмовник требало такође да садржи — кандидате за упућивање угњежденим елементом <literal>ref</literal> у тексту. Уредник затим одреди њихове вероватне кључеве, према наведеном обрасцу, па потражи које Појмовник већ бележи. На пронађене заиста упути елементом <literal>ref</literal>, а кључеве још увек ненаписаних забележи @-коментаром подно појма. На пример, ако појам <literal>application</literal> постоји, а појам <literal>menu</literal> још увек не, онда би један опис могао тећи овако:
    <programlisting><![CDATA[
<desc>У <ref c="application">програмима</ref>,
наслов <ref c="zzz">менија</ref> чијим ставкама корисник утиче на
податке које програм пружа у датом тренутку, или на визуелну
представу документа на којем тренутно ради.</desc>
<!-- @упути: menu -->
]]></programlisting>
    Овај пример показује и то да иако појам <literal>menu</literal> не постоји, за њега је у текст описа ипак убачен упућивач, али му је као одредишни кључ (атрибут <literal>c</literal>) задато <literal>zzz</literal>. Појам <literal>zzz</literal> је метапојам дефинисан у датотеци <filename>concepts/0.xml</filename>, управо да би уредник унапред могао да обележи где треба убацити стварне кључеве када се појмови једном заиста напишу. (Ако би атрибут <literal>c</literal> одмах добио вредност кључа непостојећег појма, дошло би до грешке при аутоматској овери.)</para>

    <para>Уколико се исти појам више пута помиње у опису, упућивач на њега треба додати само при првом помену. Треба избегавати помињање у опису израза који именује са̑м појам који се описује, не толико због могућности кружне дефиниције, колико зато што погледи на појмовник нису обавезни да представе изразе пре описа, већ могу то учинити и обрнуто.</para>

    <para>За друге појмове које опис помиње такође је могуће да су различито именовани кроз окружења — што ће уредник приметити при провери да ли је појам на који жели да упути већ забележен. Тада унутар упућивача убацује <emphasis>угњеждени бирач</emphasis> облика <literal>~&lt;кључеви-окр1>:&lt;текст1>|...~</literal>, који одређује који ће део текста бити изабран према окружењу за које се гради поглед на појмовник. Имајући у виду <link linkend="pl-terms-file">претходне примере</link> разноврсно именованих појмова, описи би на њих овако могли упућивати:
    <programlisting><![CDATA[
<desc>Ниво организације података
изнад <ref c="file">~датотека|kde:фајлова~</ref>, на којем [...]</desc>
...
<desc>[...] обично са <ref c="applet">~аплетом|fed:програмичићем|
gnm ooo:програмчетом~</ref> у оквиру [...]</desc>
]]></programlisting>
    У оба примера угњежденог бирача, по један од изборних текстова (‘датотека’ и ‘аплетом’) нема наведен кључ окружења — то значи да се ради или о претежном (у првом примеру) или о компромисном изразу (у другом примеру) за дати појам, па се поред њега наводе само они који се разликују. Текст без кључа биће изабран кад год се поглед на појмовник не гради за једно одређено окружење; ако таквог не би било, онда би међу равноправним окружењима погледу остало само да насумице прикаже један од текстова, што не би било сасвим у реду из неколико разлога (па и техничких). Овим је уједно објашњења сврха уредничког компромиса.</para>

    <para>Коначно, све изнесено за описе важи и за коментаре и порекла, што појмова што израза (елементи <literal>comment</literal> и <literal>origin</literal>).</para>

</sect2>

<sect2 id="s-adding-notes">
    <title>Напомене</title>

    <para><remark>Какви појмови приличе Појмовнику (боље — какви не приличе)? Нешто о областима.</remark></para>

    <para><remark>Нешто о граматичким категоријама. Категорије за синтагме (наставак <literal>-s</literal>); где не наводити (нпр. за стандардне текстове, област <literal>stdui</literal>).</remark></para>

    <para><remark>Елемент <literal>by</literal>, који наводи уредника — да ли га, и где, додавати; нпр. коментар типа личног мишљења? Исто атрибут <literal>src</literal>, који наводи извор; нпр. за изразе идејног типа (окружење <literal>id</literal>)?</remark></para>

    <para><remark>Неки устаљени типови коментара који могу бити од користи за појмове и изразе?</remark></para>

</sect2>

</sect1>

</article>
